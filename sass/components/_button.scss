.btn {
  /* pseudo-classes are methods for styling elements under special conditions/state */
  /* :link is a pseudo-class of .btn. :link represents a state of the button selector. */
  /* :link refers to the link element in it's natural state */
  /* :visited refers to the link after it has been clicked */
  /* transition property "all" refers to the transition on all states (hover/active/visited)...must be set on initial state (:link) */
  &,
  &:link,
  &:visited {
    position: relative;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    font-size: $default-font-size;

    // Change for the <button> element
    border: none;
    cursor: pointer;
  }

  /* :hover is when the mouse is over the element */
  /* box-shadow: x-value y-value blur spread color */
  &:hover {
    outline: none;
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  /* :active refers to the element when it is being clicked */
  /* box-shadow is reduced when it is being clicked to give the effect of it being pressed down */
  &:active,
  &:focus {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;
    &::after {
      background-color: $color-primary;
    }
  }


  /* the ::after property must have a content and display property at a minimum. */
  /* display should match the element's display */
  /* treated like a child of .btn */
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }

  /* animation: name / duration / timing-function / delay */
  /* animation-fill-mode applys animation properties before it actually starts */
  &--animated {
    animation: moveInButton .5s ease-out .75s;
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0);
  }
}
